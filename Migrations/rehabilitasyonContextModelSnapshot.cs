// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Models.Contexts;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(rehabilitasyonContext))]
    partial class rehabilitasyonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.Models.Entities.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyAdress")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_adress");

                    b.Property<string>("CompanyCity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_city");

                    b.Property<string>("CompanyDistrict")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_district");

                    b.Property<string>("CompanyEmail")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_email");

                    b.Property<string>("CompanyFaturaAdresi")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_fatura_adresi");

                    b.Property<string>("CompanyFax")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_fax");

                    b.Property<string>("CompanyGsm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("company_gsm");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyPassword")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_password");

                    b.Property<string>("CompanyPhone")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_phone");

                    b.Property<string>("CompanyUsername")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_username");

                    b.Property<string>("CompanyVergiDairesi")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_vergi_dairesi");

                    b.Property<string>("CompanyVergiNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_vergi_no");

                    b.HasKey("CompanyId");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("Project.Models.Entities.Deneme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("deneme", (string)null);
                });

            modelBuilder.Entity("Project.Models.Entities.Parent", b =>
                {
                    b.Property<long>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ParentId"), 1L, 1);

                    b.Property<string>("ParentName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("parent_name");

                    b.Property<string>("ParentPhone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("parent_phone");

                    b.Property<string>("ParentUsername")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("parent_username");

                    b.Property<string>("ParentUserpassword")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("parent_userpassword");

                    b.HasKey("ParentId");

                    b.ToTable("parents", (string)null);
                });

            modelBuilder.Entity("Project.Models.Entities.School", b =>
                {
                    b.Property<long>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("school_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SchoolId"), 1L, 1);

                    b.Property<string>("SchoolAdress")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_adress");

                    b.Property<string>("SchoolCity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_city");

                    b.Property<string>("SchoolCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("school_code");

                    b.Property<string>("SchoolDistrict")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_district");

                    b.Property<string>("SchoolEmail")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_email");

                    b.Property<string>("SchoolFaks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_faks");

                    b.Property<string>("SchoolGsm")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_gsm");

                    b.Property<string>("SchoolName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_name");

                    b.Property<string>("SchoolPassword")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_password");

                    b.Property<string>("SchoolPhone")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_phone");

                    b.Property<string>("SchoolRuhsatAldigiKurum")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_ruhsat_aldigi_kurum");

                    b.Property<string>("SchoolUsername")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_username");

                    b.Property<string>("SchoolWeb")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_web");

                    b.Property<string>("SchoolYekiliKimlik")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("school_yekili_kimlik");

                    b.Property<string>("SchoolYekiliÜnvan")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_yekili_ünvan");

                    b.Property<string>("SchoolYetkili")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("school_yetkili");

                    b.HasKey("SchoolId");

                    b.ToTable("school", (string)null);
                });

            modelBuilder.Entity("Project.Models.Entities.Student", b =>
                {
                    b.Property<string>("StudentIdcartNo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("student_idcart_no");

                    b.Property<string>("StudentAdress")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("student_adress");

                    b.Property<DateTime?>("StudentAyrılmaTarihi")
                        .HasColumnType("date")
                        .HasColumnName("student_ayrılma_tarihi");

                    b.Property<string>("StudentBloodType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("student_blood_type");

                    b.Property<string>("StudentBornPlace")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("student_born_place");

                    b.Property<string>("StudentCity")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("student_city");

                    b.Property<string>("StudentDadName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("student_dad_name");

                    b.Property<DateTime?>("StudentDateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("student_date_of_birth");

                    b.Property<DateTime?>("StudentDateOfRecord")
                        .HasColumnType("date")
                        .HasColumnName("student_date_of_record");

                    b.Property<string>("StudentDistrict")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("student_district");

                    b.Property<bool?>("StudentGender")
                        .HasColumnType("bit")
                        .HasColumnName("student_gender");

                    b.Property<string>("StudentGsmNo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("student_gsm_no");

                    b.Property<DateTime?>("StudentHospitalReportEndDate")
                        .HasColumnType("date")
                        .HasColumnName("student_hospital_report_end_date");

                    b.Property<DateTime?>("StudentHospitalReportStartDate")
                        .HasColumnType("date")
                        .HasColumnName("student_hospital_report_start_date");

                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudentId"), 1L, 1);

                    b.Property<bool?>("StudentIsActiveStudent")
                        .HasColumnType("bit")
                        .HasColumnName("student_is_active_student");

                    b.Property<bool?>("StudentIsPaid")
                        .HasColumnType("bit")
                        .HasColumnName("student_is_paid");

                    b.Property<string>("StudentMomName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student_mom_name");

                    b.Property<string>("StudentName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student_name");

                    b.Property<string>("StudentNeighborhood")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("student_neighborhood");

                    b.Property<DateTime?>("StudentRamReportEndDate")
                        .HasColumnType("date")
                        .HasColumnName("student_ram_report_end_date");

                    b.Property<string>("StudentRamReportNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("student_ram_report_no");

                    b.Property<DateTime?>("StudentRamReportStartDate")
                        .HasColumnType("date")
                        .HasColumnName("student_ram_report_start_date");

                    b.Property<string>("StudentSchool")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("student_school");

                    b.Property<bool?>("StudentStillStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("student_still_student")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("StudentSurname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student_surname");

                    b.Property<string>("StudentTypeOfDisabled")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student_type_of_disabled");

                    b.Property<long?>("StudentWhichClass")
                        .HasColumnType("bigint")
                        .HasColumnName("student_which_class");

                    b.HasKey("StudentIdcartNo")
                        .HasName("student_pkey");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("Project.Models.Entities.Teacher", b =>
                {
                    b.Property<string>("TeacherIdcartNo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("teacher_idcart_no");

                    b.Property<string>("TeacherAdress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("teacher_adress");

                    b.Property<long?>("TeacherAylikDersSayisi")
                        .HasColumnType("bigint")
                        .HasColumnName("teacher_aylik_ders_sayisi");

                    b.Property<DateTime?>("TeacherBirthOfDate")
                        .HasColumnType("date")
                        .HasColumnName("teacher_birth_of_date");

                    b.Property<string>("TeacherBirthPlace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_birth_place");

                    b.Property<string>("TeacherBloodType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_blood_type");

                    b.Property<string>("TeacherDadName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_dad_name");

                    b.Property<DateTime?>("TeacherDateOfLeaveOfEmployment")
                        .HasColumnType("date")
                        .HasColumnName("teacher_date_of_leave_of_employment");

                    b.Property<DateTime?>("TeacherDateOfRecord")
                        .HasColumnType("date")
                        .HasColumnName("teacher_date_of_record");

                    b.Property<string>("TeacherEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_email");

                    b.Property<bool?>("TeacherGender")
                        .HasColumnType("bit")
                        .HasColumnName("teacher_gender");

                    b.Property<string>("TeacherGsm")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("teacher_gsm");

                    b.Property<long?>("TeacherGunlukDersSayısı")
                        .HasColumnType("bigint")
                        .HasColumnName("teacher_gunluk_ders_sayısı");

                    b.Property<long?>("TeacherHaftalikDersSayisi")
                        .HasColumnType("bigint")
                        .HasColumnName("teacher_haftalik_ders_sayisi");

                    b.Property<long>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("teacher_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TeacherId"), 1L, 1);

                    b.Property<bool?>("TeacherKodroluMu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("teacher_kodrolu_mu")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("TeacherMebbisOnayNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("teacher_mebbis_onay_no");

                    b.Property<string>("TeacherMomName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_mom_name");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("teacher_name");

                    b.Property<string>("TeacherPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_password");

                    b.Property<DateTime?>("TeacherSozlesmeBaslangic")
                        .HasColumnType("date")
                        .HasColumnName("teacher_sozlesme_baslangic");

                    b.Property<DateTime?>("TeacherSozlesmeBitis")
                        .HasColumnType("date")
                        .HasColumnName("teacher_sozlesme_bitis");

                    b.Property<string>("TeacherSurname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("teacher_surname");

                    b.Property<string>("TeacherTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("teacher_title");

                    b.Property<string>("TeacherUsername")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("teacher_username");

                    b.HasKey("TeacherIdcartNo")
                        .HasName("teacher_pkey");

                    b.ToTable("teacher", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
